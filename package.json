{
  "name": "peer-doc",
  "private": true,
  "scripts": {
    "start": "meteor run",
    "lint": "eslint ."
  },
  "dependencies": {
    "babel-runtime": "^6.26.0",
    "bcrypt": "^1.0.3",
    "core-js": "^2.5.3",
    "meteor-node-stubs": "^0.2.11",
    "moment": "^2.20.1",
    "prosemirror-collab": "^1.0.0",
    "prosemirror-commands": "^1.0.3",
    "prosemirror-dropcursor": "^1.0.0",
    "prosemirror-gapcursor": "^1.0.0",
    "prosemirror-history": "^1.0.0",
    "prosemirror-keymap": "^1.0.0",
    "prosemirror-schema-basic": "^1.0.0",
    "prosemirror-state": "^1.0.2",
    "prosemirror-view": "^1.0.8",
    "vue": "git://github.com/meteor-vue/vue.git#meteor",
    "vue-router": "^2.8.1",
    "vuetify": "^0.17.6"
  },
  "devDependencies": {
    "babel-eslint": "^8.2.1",
    "eslint": "^4.15.0",
    "eslint-config-airbnb-base": "^12.1.0",
    "eslint-import-resolver-meteor": "^0.4.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-meteor": "^4.1.4"
  },
  "meteor": {
    "vueVersion": 2
  },
  "eslintConfig": {
    "parser": "babel-eslint",
    "env": {
      "node": true,
      "browser": true
    },
    "plugins": [
      "meteor"
    ],
    "settings": {
      "import/resolver": "meteor"
    },
    "extends": "airbnb-base",
    "rules": {
      "import/no-extraneous-dependencies": 0,
      "import/extensions": 0,
      "import/no-absolute-path": 0,
      "import/prefer-default-export": 0,
      "no-underscore-dangle": 0,
      "quotes": 0,
      "prefer-arrow-callback": 0,
      "no-else-return": 0,
      "no-continue": 0,
      "object-shorthand": ["error", "always", {
        "ignoreConstructors": false,
        "avoidQuotes": false
      }],
      "brace-style": [
        "error",
        "stroustrup"
      ],
      "object-curly-spacing": [
        "error",
        "never"
      ],
      "max-len": [
        "error",
        {
          "code": 240,
          "comments": 120
        }
      ],
      "arrow-body-style": [
        "error",
        "always"
      ],
      "arrow-parens": [
        "error",
        "always"
      ],
      "no-restricted-syntax": [
        "error",
        {
          "selector": "ForInStatement",
          "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
        },
        {
          "selector": "WithStatement",
          "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
        }
      ]
    }
  }
}
