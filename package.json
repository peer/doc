{
  "name": "peer-doc",
  "private": true,
  "scripts": {
    "precommit": "lint-staged",
    "start": "meteor run",
    "lint": "eslint . --ext .js --ext .vue",
    "lint-ci": "eslint . --ext .js --ext .vue --format junit --output-file \"$(pwd)/tests/reports/js-lint-results.xml\"",
    "extract-strings": "make makemessages",
    "translations": "make translations",
    "test": "TEST_BROWSER_DRIVER=puppeteer meteor test --full-app --once --driver-package meteortesting:mocha --port 3100 --settings settings.example.json",
    "test-ci": "SERVER_TEST_REPORTER=xunit XUNIT_FILE=\"$(pwd)/tests/reports/server-test-results.xml\" TEST_BROWSER_DRIVER=puppeteer meteor test --full-app --once --driver-package meteortesting:mocha --port 3100 --settings settings.example.json",
    "test-watch": "TEST_WATCH=1 TEST_BROWSER_DRIVER=puppeteer meteor test --full-app --driver-package meteortesting:mocha --port 3100 --settings settings.example.json",
    "test-watch-browser": "TEST_WATCH=1 meteor test --full-app --driver-package meteortesting:mocha --port 3100 --settings settings.example.json",
    "test-app": "meteor test --full-app --driver-package tmeasday:acceptance-test-driver --port 3000 --settings settings.example.json",
    "cypress": "percy exec -- cypress open",
    "cypress-run": "percy exec -- cypress run",
    "cypress-ci:runner": "percy exec -- cypress run --record --reporter junit --reporter-options mochaFile=\"$(pwd)/tests/reports/cypress-results.xml\"",
    "cypress-ci": "NO_HMR=1 start-server-and-test test-app http://localhost:3000 cypress-ci:runner"
  },
  "dependencies": {
    "@babel/core": "~7.12.1",
    "@babel/plugin-proposal-class-properties": "~7.12.1",
    "@babel/runtime": "~7.12.1",
    "autoprefixer": "~8.6.5",
    "bcrypt": "~5.0.0",
    "body-parser": "~1.19.0",
    "core-js": "~3.7.0",
    "css-loader": "~0.28.11",
    "fast-json-stable-stringify": "~2.1.0",
    "jsdom": "~16.4.0",
    "material-design-icons": "git://github.com/mitar/material-design-icons.git",
    "meteor-node-stubs": "~1.0.1",
    "moment": "~2.29.1",
    "parseurl": "~1.3.3",
    "portal-vue": "^2.1.7",
    "postcss": "~6.0.22",
    "postcss-easy-import": "~3.0.0",
    "postcss-load-config": "~1.2.0",
    "prosemirror-changeset": "~1.2.1",
    "prosemirror-collab": "~1.1.1",
    "prosemirror-commands": "~1.0.7",
    "prosemirror-dropcursor": "~1.1.1",
    "prosemirror-gapcursor": "~1.0.3",
    "prosemirror-history": "~1.0.3",
    "prosemirror-keymap": "~1.0.1",
    "prosemirror-model": "~1.6.3",
    "prosemirror-schema-basic": "~1.0.0",
    "prosemirror-schema-list": "~1.0.1",
    "prosemirror-state": "~1.2.2",
    "prosemirror-view": "~1.6.6",
    "query-string": "~6.13.7",
    "randomcolor": "~0.6.2",
    "request": "^2.88.2",
    "velocity-animate": "~1.5.2",
    "vue": "git://github.com/meteor-vue/vue.git#meteor",
    "vue-gettext": "~2.0.31",
    "vue-global-events": "~1.0.3",
    "vue-router": "~3.0.1",
    "vue-template-compiler": "~2.6.10",
    "vuetify": "~1.3.8"
  },
  "devDependencies": {
    "@percy/cli": "^1.0.0-beta.67",
    "@percy/cypress": "~3.1.1",
    "babel-eslint": "~10.1.0",
    "chai": "~4.2.0",
    "cypress": "~5.6.0",
    "easygettext": "~2.3.0",
    "eslint": "~7.13.0",
    "eslint-config-airbnb-base": "~14.2.1",
    "eslint-import-resolver-meteor": "~0.4.0",
    "eslint-plugin-cypress": "~2.11.2",
    "eslint-plugin-import": "~2.22.1",
    "eslint-plugin-meteor": "~7.2.2",
    "eslint-plugin-vue": "~7.1.0",
    "husky": "~4.3.0",
    "lint-staged": "~10.5.1",
    "puppeteer": "~1.20.0",
    "start-server-and-test": "~1.11.5"
  },
  "meteor": {
    "vueVersion": 2
  },
  "babel": {
    "plugins": [
      [
        "@babel/plugin-proposal-class-properties",
        {
          "loose": true
        }
      ]
    ]
  },
  "eslintConfig": {
    "env": {
      "node": true,
      "browser": true
    },
    "plugins": [
      "meteor",
      "cypress"
    ],
    "settings": {
      "import/resolver": "meteor"
    },
    "extends": [
      "plugin:meteor/recommended",
      "plugin:vue/recommended",
      "airbnb-base"
    ],
    "parserOptions": {
      "parser": "babel-eslint",
      "allowImportExportEverywhere": true
    },
    "rules": {
      "import/no-extraneous-dependencies": 0,
      "import/extensions": 0,
      "import/no-absolute-path": 0,
      "import/prefer-default-export": 0,
      "meteor/audit-argument-checks": 0,
      "no-underscore-dangle": 0,
      "quotes": 0,
      "prefer-arrow-callback": 0,
      "prefer-destructuring": 0,
      "no-else-return": 0,
      "no-continue": 0,
      "max-classes-per-file": 0,
      "object-shorthand": [
        "error",
        "always",
        {
          "ignoreConstructors": false,
          "avoidQuotes": false
        }
      ],
      "brace-style": [
        "error",
        "stroustrup"
      ],
      "object-curly-spacing": [
        "error",
        "never"
      ],
      "object-curly-newline": [
        "error",
        {
          "multiline": true,
          "consistent": true
        }
      ],
      "max-len": [
        "error",
        {
          "code": 240,
          "comments": 140,
          "ignorePattern": "// TODO: "
        }
      ],
      "arrow-body-style": [
        "error",
        "always"
      ],
      "arrow-parens": [
        "error",
        "always"
      ],
      "no-restricted-syntax": [
        "error",
        {
          "selector": "ForInStatement",
          "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
        },
        {
          "selector": "WithStatement",
          "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
        }
      ],
      "no-unused-vars": [
        "error",
        {
          "vars": "all",
          "args": "none",
          "ignoreRestSiblings": true
        }
      ],
      "vue/mustache-interpolation-spacing": [
        "error",
        "never"
      ],
      "vue/prop-name-casing": [
        "error",
        "camelCase"
      ],
      "vue/html-closing-bracket-newline": [
        "error",
        {
          "singleline": "never",
          "multiline": "always"
        }
      ],
      "vue/html-closing-bracket-spacing": [
        "error"
      ],
      "indent": 0,
      "indent-legacy": [
        "error",
        2,
        {
          "SwitchCase": 1,
          "VariableDeclarator": 1,
          "outerIIFEBody": 1,
          "FunctionDeclaration": {
            "parameters": 1,
            "body": 1
          },
          "FunctionExpression": {
            "parameters": 1,
            "body": 1
          },
          "CallExpression": {
            "arguments": 1
          },
          "ArrayExpression": 1,
          "ObjectExpression": 1
        }
      ]
    }
  },
  "lint-staged": {
    "*.{js,vue}": [
      "eslint"
    ]
  }
}
