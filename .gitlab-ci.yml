stages:
  - build
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  DOCKER_PIPELINE_IMAGE_NAME: "$CI_REGISTRY_IMAGE/pipeline:$CI_PIPELINE_ID"

build_local:
  stage: build

  image: registry.gitlab.com/tozd/docker/meteor-testing:ubuntu-bionic-1.6.1.4

  variables:
    TXT_SECTION: "\\e[34;1m"
    TXT_CLEAR: "\\e[0m"

  script:
    - echo -e "section_start:`date +%s`:install\r\e[0K${TXT_SECTION}Install${TXT_CLEAR}"
    # TODO: We should replace this with "meteor npm ci" when we will have npm 5.7.0 or newer.
    - meteor npm install
    - meteor list
    - echo -e "section_end:`date +%s`:install\r\e[0K"
    - echo -e "section_start:`date +%s`:lint\r\e[0K${TXT_SECTION}Lint${TXT_CLEAR}"
    - meteor npm run lint-ci
    - echo -e "section_end:`date +%s`:lint\r\e[0K"
    - echo -e "section_start:`date +%s`:lint\r\e[0K${TXT_SECTION}Test${TXT_CLEAR}"
    - meteor npm run test-ci
    - echo -e "section_end:`date +%s`:test\r\e[0K"
    - echo -e "section_start:`date +%s`:cypress\r\e[0K${TXT_SECTION}Cypress${TXT_CLEAR}"
    - meteor npm run cypress-ci
    - echo -e "section_end:`date +%s`:cypress\r\e[0K"

build_image:
  stage: build

  image: docker:19

  services:
    - docker:19-dind

  before_script:
    - docker info

  script:
    - docker build --pull -t "$DOCKER_PIPELINE_IMAGE_NAME" .
    - docker push "$DOCKER_PIPELINE_IMAGE_NAME"

check_authors:
  stage: build

  image: alpine:3

  script:
   - apk add --no-cache git bash
   - ./.authors/check-authors.sh

 # Check that there are no merge marks in commits.
check_commits:
  stage: build

  image: alpine:3

  variables:
    GIT_DEPTH: "0"

  script:
   - apk add --no-cache git
   - '! git log --oneline "-G^(<<<<<<<|=======|>>>>>>>)" | grep "^"'

push_image:
  stage: deploy

  image: docker:19

  services:
    - docker:19-dind

  before_script:
    - docker info
    - echo "$CI_JOB_TOKEN" | docker login --username gitlab-ci-token --password-stdin "$CI_REGISTRY"

  script:
    # TODO: Improve so that pulling is not necessary. See: https://gitlab.com/gitlab-org/gitlab/-/issues/15252
    - docker pull "$DOCKER_PIPELINE_IMAGE_NAME"
    - docker tag "$DOCKER_PIPELINE_IMAGE_NAME" "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

  only:
    - main
    - devel
